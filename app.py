from flask import Flask, render_template, request, jsonify
import os
import platform

app = Flask(__name__)

regions = ["Region A", "Region B", "Region C", "Region D"]

activities = {
    "CIF Creation": r"C:/Users/SBI/Downloads/ssrn-3531782.pdf",
    "Account Creation": r"C:/Users/SBI/Desktop/package/warn2.bat",
    "CCOD Account": r"C:/Users/SBI/Desktop/package/warn3.bat"
}

# Common output file path (generated by batch files)
OUTPUT_FILE = r"C:/Users/SBI/Desktop/Chatbot/Output.txt"

@app.route('/')
def index():
    return render_template('index.html', regions=regions, activities=list(activities.keys()))

@app.route('/run_activity', methods=['POST'])
def run_activity():
    data = request.json
    activity = data.get('activity')

    if activity not in activities:
        return jsonify({"status": "error", "message": "Invalid activity selected."})

    batch_path = activities[activity]

    if not os.path.exists(batch_path):
        return jsonify({"status": "error", "message": f"Batch file not found: {batch_path}"})

    try:
        if platform.system() == 'Windows':
            os.startfile(batch_path)
        else:
            return jsonify({"status": "error", "message": "Batch execution only supported on Windows."})

        return jsonify({"status": "success", "message": f"Started activity: {activity}"})
    except Exception as e:
        return jsonify({"status": "error", "message": f"Error running batch: {e}"})


@app.route('/get_output', methods=['GET'])
def get_output():
    """Read and return contents of generated output file."""
    if not os.path.exists(OUTPUT_FILE):
        return jsonify({"status": "error", "message": "Output file not found."})

    try:
        with open(OUTPUT_FILE, "r", encoding="utf-8") as f:
            content = f.read()
        return jsonify({"status": "success", "content": content})
    except Exception as e:
        return jsonify({"status": "error", "message": f"Error reading file: {e}"})


if __name__ == '__main__':
    app.run(debug=True)
